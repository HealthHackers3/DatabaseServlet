plugins {
    id 'war'    // Creates a webapp jar file, ie a '.war' file. Extends the ‘java’ plugin
    id 'org.gretty' version '3.1.1' // This includes a jetty webserver
}
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

war{
    sourceCompatibility = JavaVersion.VERSION_11
    // all of the library jar files used are to be zipped into the war file:-
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}
// We have to create a new gradle task called ‘stage’ that Heroku will run
// when deploying the war file
tasks.register('stage'){
    dependsOn 'build'
    dependsOn 'clean'
}
build.mustRunAfter clean

dependencies {
    // to include the servlet libraries
    implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation group: 'com.google.code.gson', name:'gson', version: '2.7'
    runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.2.18'
    implementation 'com.zaxxer:HikariCP:5.0.1'  // Add this line for HikariCP
    implementation 'org.postgresql:postgresql:42.5.0'  // PostgreSQL JDBC driver
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.5'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0' // Servlet API
    implementation 'commons-fileupload:commons-fileupload:1.4' // File upload handling
    implementation 'commons-io:commons-io:2.11.0' // File handling utilities
    implementation 'org.slf4j:slf4j-api:2.0.9' // SLF4J for logging
    implementation 'ch.qos.logback:logback-classic:1.4.11' // Logback for SLF4J

}
test {
    useJUnitPlatform()
}